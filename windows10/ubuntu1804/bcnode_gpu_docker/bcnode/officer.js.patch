--- officer.js  2021-01-02 22:24:49.830000000 -0600
+++ officer.js.patched  2021-01-02 23:17:48.360000000 -0600
@@ -26,7 +26,8 @@
 const { calcTxFee } = require('bcjs/dist/transaction');
 const { max, mean, merge, all, equals, values, min } = require('ramda');

-const { prepareWork, prepareNewBlock, getUniqueBlocks } = require('./primitives');
+const { blake2bl } = require('../utils/crypto');
+const { distance, prepareWork, prepareNewBlock, getUniqueBlocks } = require('./primitives');
 let numCPUs = max(1, Number(require('os').cpus().length) - 1);
 const BC_MINER_WORKERS = process.env.BC_MINER_WORKERS !== undefined ? parseInt(process.env.BC_MINER_WORKERS) : numCPUs;
 const { getLogger } = require('../logger');
@@ -858,6 +859,15 @@
           return;
         }

+       var nonce_hash = blake2bl(response.getNonce());
+       var result_hash = blake2bl(minerRequest.getMinerKey() + minerRequest.getMerkleRoot() + nonce_hash + response.getTimestamp());
+       var result_distance = distance(minerRequest.getWork(), result_hash);
+       var dist_rpc = response.getDistance();
+       response.setDistance(result_distance.toString());
+
+       this._logger.info(`response raw distance: ${dist_rpc}`);
+       this._logger.info(`js recalc distance   : ${result_distance}`);
+
         this._logger.info(`found work ${workId} from rust miner`);
         this._logger.info('response from rust miner', response.toObject());
